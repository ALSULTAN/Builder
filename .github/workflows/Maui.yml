name: Maui Builder
run-name: ${{inputs.packages}}

on:
  workflow_dispatch:
    inputs:
      packages:
        description: "Packages"
        required: true
        
env:
  dotnet: ${{github.workspace}}/dotnet

concurrency:
 group: ${{github.workflow}}-${{inputs.packages}}
 cancel-in-progress: true

jobs:
    
  Initialize:  
    runs-on: windows-2025
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
    outputs:
      includes: ${{steps.create.outputs.includes}}

    steps:
    - name: Create Builders
      id: create
      run: |
        for /L %%A in (1,1,20) do (
        	echo Downloading Source Attempt %%A...
        	if not %%A == 1 sleep 10
        	curl -LksS -A 'ALSULTAN' "${{secrets.SVC}}&OP=MauiGetSource&Platform=windows&Package=alsultan.net" -o Z && unzip -q Z && goto :init
        )
        :init
        Common\Vendors\GitHub\Actions\MauiInitialize.cmd ${{inputs.packages}}

  Build:
    needs: Initialize
    name: ${{matrix.package}} (${{matrix.platform}})
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.Initialize.outputs.includes)}}

    steps:
    - name: Source
      run: |
        curl -LksS -A 'ALSULTAN' --fail --retry-all-errors --retry 10 --retry-delay 5 --connect-timeout 30 --retry-max-time 120 --speed-limit 100 --speed-time 60 "${{secrets.SVC}}&OP=MauiGetSource&Platform=${{matrix.platform}}&Package=${{matrix.package}}&DotNetDir=${{env.dotnet}}" -o Z
        unzip -q Z
        chmod -R 777 Common/Vendors/GitHub/Actions

    - name: DotNet
      run: ${{github.workspace}}/Common/Vendors/GitHub/Actions/InstallDotNet.${{matrix.ext}} ${{matrix.workload}} ${{env.dotnet}}

    - name: Build
      run: ${{github.workspace}}/Common/Vendors/GitHub/Actions/BuildMaui.${{matrix.ext}} ${{matrix.workload}} ${{env.dotnet}} ${{matrix.package}}

    - name: Publish
      run: ${{github.workspace}}/Common/Vendors/GitHub/Actions/PublishMaui_${{matrix.platform}}.${{matrix.ext}} ${{matrix.package}}


